plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.palantir.docker' version '0.22.1'
    id 'com.palantir.docker-run' version '0.22.1'
}

group = 'com.upao'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar{
    enabled(false)
}
docker {  //generaci√≥n una nueva imagen
    //name = jar.baseName
    name "${project.name}:${project.version}"
    copySpec.from("build/libs").into("/")
    buildArgs(['JAR_FILE': "${project.name}-${project.version}.jar"])
    pull(true)
    setDockerfile(file("src/main/docker/Dockerfile"))
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '9000:9000'
    clean true
}